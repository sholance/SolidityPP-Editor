const bel = require('bel')
const csjs = require('csjs-inject')

module.exports = menubar

// theme = {
//   "font1":"Courier New",
//   "color_text":"#8a929b",
//   "color_activeText":"#ffffff",
//   "color_bgPanel":"#2c323c",
//   "color_bgTab":"#21252b",
//   "color_bgContent":"#21252b",
//   "color_background":"#8a929b",
//   "color_bgPane":"#21252b",
//   "color_bgMenubar":"#21252b",
//   "logo":[
//     "hsla(120.21219456537133,100%,15%,1)",
//     "hsla(98.73088246205019,100%,15%,1)",
//     "hsla(62.31218931761149,100%,15%,1)"
//   ],
//   "color_bgEditor":"#21252b",
//   "color_bgLinebar":"#21252b",
//   "color_seperator":"#2c323c"
// }
// var items = [ // e.g.
//   { title: 'asdf', fn: e => console.log('cmd:asdf') },
//   { title: 'rstu', fn: e => console.log('cmd:rstu') },
//   { title: 'xyz!', fn: e => console.log('cmd:xyz!') },
//   { title: 'opq!', fn: e => console.log('cmd:opq!') }
// ]
// var el = menubar({ items, theme })

function menubar ({ items = [], theme = {} }, emit) {
  const css = getTheme(theme)
  return bel`
    <div class=${css.menubar}>
      <div class=${css.navbar}>
      ${items.map(({ active, title, fn }) => bel`
        <button class="${css.btn} ${active ? css.active : ''}" onclick=${e => {
          var buttons = [...e.currentTarget.parentElement.children]
          buttons.forEach(btn => {
            if (btn === e.currentTarget) btn.classList.add(css.active)
            else btn.classList.remove(css.active)
          })
          fn()
        }}>${title}</button>
      `)}
      </div>
      <div class=${css.chatLink} onclick=${() => window.open('https://kardiachain.io/', '_blank')}>GET WALLET</div>
      <div class=${css.logo} onclick=${() => window.open('https://kardiachain.io/', '_blank')}>
        <img src="./assets/logo.png" alt="logo">
      </div>
    </div>`
}
const getTheme = (THEMES => (theme, key = JSON.stringify(theme)) =>{
  return THEMES.get(key) || THEMES.set(key, style(theme)).get(key)
}
)(new Map([]))
// @TODO: maybe use "WeakMap" instead? ...and init on first use?
const style = ({
  // @TODO: map to meaningful names
  // @TODO: make updatable (dark->light->dark->...)
  color_bgPanel,
  color_background,
  color_bgMenubar,
} = {}) => csjs`
.navbar {
  display: flex;
  flex-direction: row;
  box-sizing: border-box;
  margin: 0;
  align-items: center;
  padding: 7px;
  padding-left: 20px;
  flex-grow: 1;
}
.btn {
  margin: 0 2px;
  background-color: ${color_bgPanel};
  border: 4px solid ${color_bgPanel};
}
.active {
  background-color: ${color_background};
}
.chatLink {
  font-size: 0.8rem;
  color: #14b9d5;
  width: 115px;
  display: flex;
  height: 45px;
  text-decoration: none;
  align-items: center;
}
.chatLink:hover {
  opacity: 0.8;
  cursor: pointer;
}
.logo {
  margin-right: 10px;
  cursor: pointer;
}
.logo img {
  height: 30px;
}
.menubar {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  padding: 5px;
  background-color: ${color_bgMenubar};
  overflow: hidden;
}`
